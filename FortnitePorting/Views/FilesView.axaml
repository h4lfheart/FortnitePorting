<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:viewModels="clr-namespace:FortnitePorting.ViewModels"
             xmlns:ui="using:FluentAvalonia.UI.Controls"
             xmlns:ext="clr-namespace:FortnitePorting.Extensions;assembly=FortnitePorting"
             xmlns:asyncImageLoader="clr-namespace:AsyncImageLoader;assembly=AsyncImageLoader.Avalonia"
             xmlns:versions="clr-namespace:CUE4Parse.UE4.Versions;assembly=CUE4Parse"
             xmlns:shared="clr-namespace:FortnitePorting.Shared;assembly=FortnitePorting.Shared"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:controls="clr-namespace:FortnitePorting.Controls"
             xmlns:material="clr-namespace:Material.Icons.Avalonia;assembly=Material.Icons.Avalonia"
             xmlns:icons="clr-namespace:Material.Icons;assembly=Material.Icons"
             xmlns:files="clr-namespace:FortnitePorting.Models.Files"
             xmlns:views="clr-namespace:FortnitePorting.Views"
             xmlns:fortnitePorting="clr-namespace:FortnitePorting"
             d:DesignHeight="770" d:DesignWidth="1160"
             x:Class="FortnitePorting.Views.FilesView"
             x:DataType="viewModels:FilesViewModel">
    <Grid>
        <Grid Margin="{ext:Space 1}">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="{ext:Space 1}"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="{ext:Space 1}"/>
                <ColumnDefinition Width="2.5*"/>
            </Grid.ColumnDefinitions>
            
            <ui:FABorder Grid.Row="0" Grid.Column="0">
                <TreeView ItemsSource="{Binding TreeViewCollection}" AutoScrollToSelectedItem="True"
                          SelectedItem="{Binding SelectedTreeItem, Mode=TwoWay}"
                          Tapped="OnTreeItemTapped">
                    <TreeView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel />
                        </ItemsPanelTemplate>
                    </TreeView.ItemsPanel>
                    <TreeView.ItemContainerTheme>
                        <ControlTheme x:DataType="files:TreeItem" TargetType="TreeViewItem" BasedOn="{StaticResource {x:Type TreeViewItem}}">
                            <Setter Property="IsExpanded" Value="{Binding Expanded, Mode=TwoWay}" />
                            <Setter Property="IsSelected" Value="{Binding Selected, Mode=TwoWay}" />
                        </ControlTheme>
                    </TreeView.ItemContainerTheme>
                    <TreeView.ItemTemplate>
                        <TreeDataTemplate ItemsSource="{Binding Children.Values}">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                                <material:MaterialIcon Width="16" Height="16" Margin="0 0 8 0"
                                                       Classes.File="{Binding Type, 
                                                           Converter={StaticResource EnumEquals}, 
                                                           ConverterParameter={x:Static files:ENodeType.File}}"
                                                       Classes.Folder="{Binding Type, 
                                                           Converter={StaticResource EnumEquals}, 
                                                           ConverterParameter={x:Static files:ENodeType.Folder}}">
                                    <material:MaterialIcon.Styles>
                                        <Style Selector="material|MaterialIcon.File">
                                            <Style.Setters>
                                                <Setter Property="Kind" Value="File" />
                                            </Style.Setters>
                                        </Style>
                                        <Style Selector="material|MaterialIcon.Folder">
                                            <Style.Setters>
                                                <Setter Property="Kind" Value="Folder" />
                                            </Style.Setters>
                                        </Style>
                                    </material:MaterialIcon.Styles>
                                </material:MaterialIcon>
                                <TextBlock Text="{Binding Name}" />
                            </StackPanel>
                        </TreeDataTemplate>
                    </TreeView.ItemTemplate>
                </TreeView>
            </ui:FABorder>
            
            <GridSplitter Grid.Row="0" Grid.Column="1" Opacity="0"/>
            
            <Grid Grid.Row="0" Grid.Column="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="{ext:Space 1}"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                
                <Grid Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="{ext:Space 1}"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="{ext:Space 1}"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBox Grid.Column="0" Text="{Binding ActualSearchText, Mode=TwoWay}" Watermark="Search" KeyDown="OnSearchKeyDown"/>
                
                    <ToggleButton Grid.Column="2" ToolTip.Tip="Regex" HorizontalAlignment="Right" 
                                  Content="{material:MaterialIconExt Regex}" IsChecked="{Binding UseRegex}"/>
                    
                    <DropDownButton Grid.Column="4" HorizontalAlignment="Stretch" Padding="{ext:Space 4, 0}">
                        <DropDownButton.Flyout>
                            <Flyout>
                                <ItemsControl ItemsSource="{Binding GameNames}">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <CheckBox Content="{Binding DisplayName}" 
                                                      IsChecked="{Binding IsChecked, Mode=TwoWay}"
                                                      IsCheckedChanged="OnGameNameChecked"/>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <StackPanel VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                </ItemsControl>
                            </Flyout>
                        </DropDownButton.Flyout>
                        
                        <StackPanel Orientation="Horizontal">
                            <material:MaterialIcon Kind="Filter" Margin="{ext:Space 0, 0, 1, 0}"/>
                            <TextBlock Text="Game Filters"/>
                        </StackPanel>
                    </DropDownButton>
                </Grid>
                
                <ui:FABorder Grid.Row="2">
                    <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                        <ListBox ItemsSource="{Binding FlatViewCollection}" SelectionMode="Multiple"
                                 SelectedItems="{Binding SelectedFlatViewItems, Mode=TwoWay}"
                                 AutoScrollToSelectedItem="True" DoubleTapped="OnFlatItemDoubleTapped">
                            <ListBox.KeyBindings>
                                <KeyBinding Gesture="P" Command="{Binding PreviewCommand}"/>
                                <KeyBinding Gesture="E" Command="{Binding ExportCommand}"/>
                            </ListBox.KeyBindings>
                            <ListBox.ItemTemplate>
                                <DataTemplate DataType="files:FlatItem">
                                    <ContentControl>
                                        <ContentControl.ContextMenu>
                                            <ContextMenu>
                                                <MenuItem Header="Copy Path" Command="{Binding CopyPathCommand}"/>
                                                <MenuItem Header="Copy Properties" Command="{Binding CopyPropertiesCommand}"/>
                                                <MenuItem Header="Save Properties" Command="{Binding SavePropertiesCommand}"/>
                                            </ContextMenu>
                                        </ContentControl.ContextMenu>
                                        
                                        <TextBlock Text="{Binding Path}"/>
                                    </ContentControl>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel Margin="{ext:Space 0, 0, 1.5, 0}"/>
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>
                        </ListBox>
                    </ScrollViewer>
                </ui:FABorder>
            </Grid>
            
            <Grid Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3" HorizontalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="{ext:Space 1}"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="{ext:Space 1}"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="{ext:Space 1}"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                            
                <Grid Grid.Column="0" ColumnDefinitions="Auto *">
                    <TextBlock Grid.Column="0" Text="Export To" VerticalAlignment="Center"
                               Margin="{ext:Space 1, 0, 1, 0.25}" />
                    <ComboBox Grid.Column="1"
                              HorizontalAlignment="Stretch" VerticalAlignment="Center"
                              ItemsSource="{ext:EnumToItemsSource {x:Type fortnitePorting:EExportLocation}}"
                              SelectedItem="{Binding ExportLocation, Converter={StaticResource EnumToRecord}}">
                        <ComboBox.ItemContainerTheme>
                            <ControlTheme x:DataType="ext:EnumRecord" TargetType="ComboBoxItem" BasedOn="{StaticResource {x:Type ComboBoxItem}}">
                                <Setter Property="IsEnabled" Value="{Binding !IsDisabled}"/>
                            </ControlTheme>
                        </ComboBox.ItemContainerTheme>
                    </ComboBox>
                </Grid>
                    
                <Button Grid.Column="2" HorizontalAlignment="Stretch" Command="{Binding ExportCommand}">
                    <StackPanel Orientation="Horizontal">
                        <material:MaterialIcon Kind="Download" Margin="{ext:Space -1, 0, 1, 0}"/>
                        <TextBlock Text="Export"/>
                    </StackPanel>
                </Button>
                
                <Button Grid.Column="4" HorizontalAlignment="Stretch" Command="{Binding PropertiesCommand}">
                    <StackPanel Orientation="Horizontal">
                        <material:MaterialIcon Kind="Xml" Margin="{ext:Space 0, 0, 1, 0}"/>
                        <TextBlock Text="Properties"/>
                    </StackPanel>
                </Button>
                
                <Button Grid.Column="6" HorizontalAlignment="Stretch" Command="{Binding PreviewCommand}">
                    <StackPanel Orientation="Horizontal">
                        <material:MaterialIcon Kind="CubeScan" Margin="{ext:Space 0, 0, 1, 0}"/>
                        <TextBlock Text="Preview"/>
                    </StackPanel>
                </Button>
                    
            </Grid>
        </Grid>
        <Grid IsVisible="{Binding ShowLoadingSplash}">
            <Border Background="Black" Opacity="0.25"/>
            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                <ui:ProgressRing IsIndeterminate="True" Background="Transparent" Width="50" Height="50" BorderThickness="5"/>
                <TextBlock Text="Loading Files" Margin="{ext:Space 0, 1, 0, 0}"/>
            </StackPanel>
        </Grid>
    </Grid>
</UserControl>
