<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:viewModels="clr-namespace:FortnitePorting.ViewModels"
             xmlns:ui="using:FluentAvalonia.UI.Controls"
             xmlns:ext="clr-namespace:FortnitePorting.Shared.Extensions;assembly=FortnitePorting.Shared"
             xmlns:asyncImageLoader="clr-namespace:AsyncImageLoader;assembly=AsyncImageLoader.Avalonia"
             xmlns:versions="clr-namespace:CUE4Parse.UE4.Versions;assembly=CUE4Parse"
             xmlns:shared="clr-namespace:FortnitePorting.Shared;assembly=FortnitePorting.Shared"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:controls="clr-namespace:FortnitePorting.Controls"
             xmlns:material="clr-namespace:Material.Icons.Avalonia;assembly=Material.Icons.Avalonia"
             xmlns:icons="clr-namespace:Material.Icons;assembly=Material.Icons"
             xmlns:files="clr-namespace:FortnitePorting.Models.Files"
             xmlns:fortnitePorting="clr-namespace:FortnitePorting"
             xmlns:map="clr-namespace:FortnitePorting.Models.Map"
             d:DesignHeight="770" d:DesignWidth="1160"
             x:Class="FortnitePorting.Views.MapView"
             x:DataType="viewModels:MapViewModel">
    <Grid ColumnDefinitions="Auto *">
        
        <ui:FABorder Grid.Column="1" CornerRadius="0" VerticalAlignment="Stretch"
                     Background="#22000000" HorizontalAlignment="Stretch">
            <Grid Margin="{ext:Space 1}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="{ext:Space 4}"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="{ext:Space 4}"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="{ext:Space 4}"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="{ext:Space 4}"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                
                <StackPanel Grid.Row="0" VerticalAlignment="Top">
                    <TextBlock Text="Map" Classes="BodyStrongTextBlockStyle" Margin="{ext:Space 0, 0, 0, 1}"
                               HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    
                    <ComboBox SelectedIndex="0" 
                              ItemsSource="{Binding Maps}" HorizontalAlignment="Stretch" VerticalAlignment="Center"
                              SelectedItem="{Binding SelectedMap, Mode=TwoWay}"/>
                </StackPanel>
                
                <Separator Grid.Row="1" HorizontalAlignment="Stretch"/>
                
                <StackPanel Grid.Row="2" VerticalAlignment="Top">
                    <TextBlock Text="Export To" Classes="BodyStrongTextBlockStyle" Margin="{ext:Space 0, 0, 0, 1}"
                               HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    
                    <ComboBox
                        HorizontalAlignment="Stretch" VerticalAlignment="Center"
                              ItemsSource="{ext:EnumToItemsSource {x:Type fortnitePorting:EExportLocation}}"
                              SelectedItem="{Binding ExportLocation, Converter={StaticResource EnumToRecord}}">
                        <ComboBox.ItemContainerTheme>
                            <ControlTheme x:DataType="ext:EnumRecord" TargetType="ComboBoxItem" BasedOn="{StaticResource {x:Type ComboBoxItem}}">
                                <Setter Property="IsEnabled" Value="{Binding !IsDisabled}"/>
                            </ControlTheme>
                        </ComboBox.ItemContainerTheme>
                    </ComboBox>
                </StackPanel>
                
                <Separator Grid.Row="3" HorizontalAlignment="Stretch"/>
                
                <StackPanel Grid.Row="4" VerticalAlignment="Top">
                    <TextBlock Text="Main Level" Classes="BodyStrongTextBlockStyle" Margin="{ext:Space 0, 0, 0, 1}"
                               HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="{ext:Space 1}"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                      
                        <DropDownButton Grid.Column="0" HorizontalAlignment="Stretch">
                            <DropDownButton.Flyout>
                                <MenuFlyout>
                                    <MenuItem Header="Main Actors" Classes="Checked" IsChecked="{Binding SelectedMap.WorldFlagsMainActors, Mode=TwoWay}"/>
                                    <MenuItem Header="World Partition Actors" Classes="Checked" IsChecked="{Binding SelectedMap.WorldFlagsWorldPartition, Mode=TwoWay}"/>
                                    <MenuItem Header="Instanced &amp; Foliage Actors" Classes="Checked" IsChecked="{Binding SelectedMap.WorldFlagsInstancedFoliage, Mode=TwoWay}"/>
                                    <MenuItem Header="Landscape" Classes="Checked" IsChecked="{Binding SelectedMap.WorldFlagsLandscape, Mode=TwoWay}"/>
                                    <MenuItem Header="HLODs" Classes="Checked" IsChecked="{Binding SelectedMap.WorldFlagsHLODs, Mode=TwoWay}"/>
                                </MenuFlyout>
                            </DropDownButton.Flyout>
                            
                            <TextBlock Text="Export Flags"/>
                        </DropDownButton>
                        
                        <Button Grid.Column="2"
                                Command="{Binding SelectedMap.ExportMainLevelCommand}"
                                HorizontalAlignment="Stretch" VerticalAlignment="Top">
                            <StackPanel Orientation="Horizontal">
                                <material:MaterialIcon Kind="Download" Margin="{ext:Space 0, 0, 1, 0}"/>
                                <TextBlock Text="Export"/>
                            </StackPanel>
                        </Button>
                    </Grid>
                </StackPanel>
                
                <Separator Grid.Row="5" HorizontalAlignment="Stretch"/>
                
                <StackPanel Grid.Row="6" VerticalAlignment="Top">
                    <TextBlock Text="Textures" Classes="BodyStrongTextBlockStyle" Margin="{ext:Space 0, 0, 0, 1}"
                               HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="{ext:Space 1}"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <ComboBox Grid.Column="0" SelectedIndex="0" 
                                  ItemsSource="{ext:EnumToItemsSource {x:Type map:EMapTextureExportType}}" HorizontalAlignment="Stretch" VerticalAlignment="Center"
                                  SelectedItem="{Binding SelectedMap.TextureExportType, Mode=TwoWay, Converter={StaticResource EnumToRecord}}"/>
                        
                        <Button Grid.Column="2"
                                Command="{Binding SelectedMap.ExportImageCommand}"
                                HorizontalAlignment="Stretch" VerticalAlignment="Top">
                            <StackPanel Orientation="Horizontal">
                                <material:MaterialIcon Kind="Download" Margin="{ext:Space 0, 0, 1, 0}"/>
                                <TextBlock Text="Export"/>
                            </StackPanel>
                        </Button>
                    </Grid>
                </StackPanel>
                
                <Separator Grid.Row="7" HorizontalAlignment="Stretch"/>
                
                <Grid Grid.Row="8" VerticalAlignment="Stretch" IsVisible="{Binding !SelectedMap.Info.IsNonDisplay}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="{ext:Space 1}"/>
                        <RowDefinition Height="3*"/>
                        <RowDefinition Height="{ext:Space 1}"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    
                    <TextBlock Grid.Row="0" Text="World Partition" Classes="BodyStrongTextBlockStyle" Margin="{ext:Space 0, 0, 0, 1}"
                               HorizontalAlignment="Center" VerticalAlignment="Center"/>
                
                    <ScrollViewer Grid.Row="2">
                        <ItemsControl ItemsSource="{Binding SelectedMap.SelectedMaps, Mode=TwoWay}" HorizontalAlignment="Stretch">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <ui:FABorder Background="{Binding BackgroundBrush}" 
                                                 Padding="{ext:Space 1}" Margin="{ext:Space 0, 0, 0, 0.5}"
                                                 HorizontalAlignment="Stretch" Cursor="Hand" PointerPressed="OnMapPressed">
                                        <TextBlock Text="{Binding Name}" 
                                                   HorizontalAlignment="Center" VerticalAlignment="Center"
                                                   Classes="BodyStrongTextBlockStyle"/>
                                    </ui:FABorder>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </ScrollViewer>
                    
                    <TextBlock Grid.Row="2" Text="No Maps Selected" Classes="TextFillColorTertiaryBrush"
                               HorizontalAlignment="Center" VerticalAlignment="Center" 
                               IsVisible="{Binding !SelectedMap.SelectedMaps.Count}">
                    </TextBlock>
                    
                    <Grid Grid.Row="4" VerticalAlignment="Bottom" IsEnabled="{Binding !!SelectedMap.SelectedMaps.Count}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="{ext:Space 1}"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        
                        <Grid Grid.Row="0" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="{ext:Space 1}"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            
                            <DropDownButton Grid.Column="0" HorizontalAlignment="Stretch">
                                <DropDownButton.Flyout>
                                    <MenuFlyout>
                                        <!-- TODO enum flags converter -->
                                        <MenuItem Header="Actors" Classes="Checked" IsChecked="{Binding SelectedMap.WorldPartitionFlagsMainActors, Mode=TwoWay}"/>
                                        <MenuItem Header="Instanced &amp; Foliage Actors" Classes="Checked" IsChecked="{Binding SelectedMap.WorldPartitionFlagsInstancedFoliage, Mode=TwoWay}"/>
                                        <MenuItem Header="HLODs" Classes="Checked" IsChecked="{Binding SelectedMap.WorldPartitionFlagsHLODs, Mode=TwoWay}"/>
                                    </MenuFlyout>
                                </DropDownButton.Flyout>
                            
                                <TextBlock Text="Export Flags"/>
                            </DropDownButton>
                        
                            <Button Grid.Column="2" Command="{Binding SelectedMap.ExportWorldPartitionCommand}"
                                    HorizontalAlignment="Stretch" VerticalAlignment="Bottom">
                                <StackPanel Orientation="Horizontal">
                                    <material:MaterialIcon Kind="Download" Margin="{ext:Space 0, 0, 1, 0}"/>
                                    <TextBlock Text="Export"/>
                                </StackPanel>
                            </Button>
                        </Grid>
                    
                        <Button Grid.Row="2" Command="{Binding SelectedMap.ClearSelectedMapsCommand}"
                                HorizontalAlignment="Stretch" VerticalAlignment="Bottom">
                            <StackPanel Orientation="Horizontal">
                                <material:MaterialIcon Kind="Delete" Margin="{ext:Space 0, 0, 1, 0}"/>
                                <TextBlock Text="Clear Selection"/>
                            </StackPanel>
                        </Button>
                    </Grid>
                    
                 </Grid>
            </Grid>
        </ui:FABorder>
        
        <Grid Grid.Column="0" ClipToBounds="True">
            <Viewbox StretchDirection="Both" Stretch="Uniform" Cursor="Hand"
                 RenderTransform="{Binding MapTransform}" PointerWheelChanged="OnScrollWheel" PointerMoved="OnPointerMoved">
                <Grid>
                    <Border ClipToBounds="True">
                        <Image x:Name="MapImage" Source="{Binding SelectedMap.MapBitmap, TargetNullValue=Assets/DefaultProfile.png}"/>
                    </Border>
                    <ItemsControl x:Name="GridsControl" ItemsSource="{Binding SelectedMap.Grids}"
                                  Width="{Binding Bounds.Width, ElementName=MapImage}"
                                  Height="{Binding Bounds.Height, ElementName=MapImage}">
                        <ItemsControl.OpacityMask>
                            <ImageBrush Source="{Binding SelectedMap.MaskBitmap}" TransformOrigin="50%,50%">
                                <ImageBrush.Transform>
                                    <ScaleTransform ScaleX="0.95" ScaleY="0.95"/>
                                </ImageBrush.Transform>
                            </ImageBrush>
                        </ItemsControl.OpacityMask>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Border ToolTip.Tip="{Binding ToolTipNames}" Opacity="0.35"
                                        Background="{Binding GridBrush}" BorderBrush="White" 
                                        BorderThickness="2" PointerPressed="OnCellPressed"
                                        CornerRadius="0" Padding="0" IsHitTestVisible="True"
                                        Width="{Binding CellSize}" Height="{Binding CellSize}" 
                                        Margin="{Binding OffsetMargin}"/>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <Grid/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                    </ItemsControl>
                </Grid>
            </Viewbox>
        </Grid>
        
        <TextBlock Grid.Column="0" Text="A preview of this map is not available." 
                   HorizontalAlignment="Center" VerticalAlignment="Center"
                   Classes="BodyTextBlockStyle TextFillColorTertiaryBrush">
            <TextBlock.IsVisible>
                <MultiBinding Converter="{x:Static BoolConverters.And}">
                    <Binding Path="!SelectedMap.SelectedMaps.Count"/>
                    <Binding Path="SelectedMap.Info.IsNonDisplay"/>
                </MultiBinding>
            </TextBlock.IsVisible>
        </TextBlock>
    </Grid>
</UserControl>
