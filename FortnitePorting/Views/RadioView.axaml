<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:viewModels="clr-namespace:FortnitePorting.ViewModels"
             xmlns:ui="using:FluentAvalonia.UI.Controls"
             xmlns:ext="clr-namespace:FortnitePorting.Extensions;assembly=FortnitePorting"
             xmlns:asyncImageLoader="clr-namespace:AsyncImageLoader;assembly=AsyncImageLoader.Avalonia"
             xmlns:material="clr-namespace:Material.Icons.Avalonia;assembly=Material.Icons.Avalonia"
             xmlns:versions="clr-namespace:CUE4Parse.UE4.Versions;assembly=CUE4Parse"
             xmlns:shared="clr-namespace:FortnitePorting.Shared;assembly=FortnitePorting.Shared"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:controls="clr-namespace:FortnitePorting.Controls"
             xmlns:radio="clr-namespace:FortnitePorting.Models.Radio"
             xmlns:views="clr-namespace:FortnitePorting.Views"
             xmlns:wave="clr-namespace:NAudio.Wave;assembly=NAudio.Core"
             xmlns:fortnitePorting="clr-namespace:FortnitePorting"
             d:DesignHeight="770" d:DesignWidth="1160"
             x:Class="FortnitePorting.Views.RadioView"
             x:DataType="viewModels:RadioViewModel">
    <Grid Margin="{ext:Space 1}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="{ext:Space 1}" />
            <RowDefinition Height="6.25*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        
        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="{ext:Space 1}"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="{ext:Space 1}"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            
            <TextBox Grid.Column="0" Watermark="Search" Text="{Binding SearchFilter}"/>
            
            <ComboBox Grid.Column="2" ItemsSource="{ext:EnumToItemsSource {x:Type fortnitePorting:ESoundFormat}}"
                      SelectedItem="{Binding SoundFormat, Converter={StaticResource EnumToRecord}}" />
            
            <Button Grid.Column="4" Command="{Binding SaveAllCommand}">
                <StackPanel Orientation="Horizontal">
                    <material:MaterialIcon Kind="Download" Margin="{ext:Space -1, 0, 1, 0}"/>
                    <TextBlock Text="Save All (Slow)"/>
                </StackPanel>
            </Button>
        </Grid>
        
        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="{ext:Space 1}"/>
                <ColumnDefinition Width="3*"/>
            </Grid.ColumnDefinitions>
            
            <ui:FABorder Grid.Column="0">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="{ext:Space 1}"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0" Margin="{ext:Space 1, 1, 1, 0}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="{ext:Space 1}"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="{ext:Space 1}"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="{ext:Space 1}"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="{ext:Space 1}"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" Classes="BodyStrongTextBlockStyle" VerticalAlignment="Center" HorizontalAlignment="Left" TextAlignment="Left"
                                   TextTrimming="CharacterEllipsis"
                                   Text="Playlists"/>
                        <Button Grid.Column="2" ToolTip.Tip="Create Playlist" HorizontalAlignment="Stretch" Content="{material:MaterialIconExt Add}" Command="{Binding AddPlaylistCommand}"/>
                        <Button Grid.Column="4" ToolTip.Tip="Remove Playlist" HorizontalAlignment="Stretch" Content="{material:MaterialIconExt Minus}" Command="{Binding RemovePlaylistCommand}"/>
                        <Button Grid.Column="6" ToolTip.Tip="Import Playlist" HorizontalAlignment="Stretch" Content="{material:MaterialIconExt Download}" Command="{Binding ImportPlaylistCommand}"/>
                        <Button Grid.Column="8" ToolTip.Tip="Export Playlist" HorizontalAlignment="Stretch" Content="{material:MaterialIconExt Upload}" Command="{Binding ExportPlaylistCommand}"/>
                        
                    </Grid>
                    <ListBox Grid.Row="2" ItemsSource="{Binding Playlists}" SelectedItem="{Binding ActivePlaylist}" Margin="{ext:Space 0.5, 0}" SelectedIndex="0">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="{ext:Space 1}"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                
                                    <Border Grid.Column="0"
                                            Width="64" Height="64" HorizontalAlignment="Left" CornerRadius="4"
                                            PointerPressed="OnPlayPointerPressed">
                                        <Border.Background>
                                            <ImageBrush Source="{Binding PlaylistCover}"/>
                                        </Border.Background>
                                    </Border>
                                
                                    <TextBlock Grid.Column="2" IsVisible="{Binding IsDefault}" Classes="BodyStrongTextBlockStyle"
                                               VerticalAlignment="Center" HorizontalAlignment="Left" TextAlignment="Left"
                                               Text="{Binding PlaylistName}"/>
                                    <TextBox Grid.Column="2" IsVisible="{Binding !IsDefault}" Classes="RadioTextBlockRename"
                                             VerticalAlignment="Center" HorizontalAlignment="Left" TextAlignment="Left"
                                             Text="{Binding PlaylistName}"/>
                                </Grid>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </Grid>
            </ui:FABorder>
                
            <ui:FABorder Grid.Column="2">
                <ScrollViewer>
                    <ItemsControl ItemsSource="{Binding ActiveCollection}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Grid Margin="{ext:Space 1}">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="{ext:Space 1}"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    
                                    <Border x:Name="PlayPointerTarget" Grid.Row="0" Grid.RowSpan="2" Grid.Column="0"
                                            Width="64" Height="64" HorizontalAlignment="Left" CornerRadius="4"
                                            ToolTip.Tip="{Binding Id}"
                                            PointerPressed="OnPlayPointerPressed">
                                        <Border.Background>
                                            <ImageBrush Source="{Binding CoverArtBitmap}"/>
                                        </Border.Background>

                                        <Grid IsVisible="{Binding IsPointerOver, ElementName=PlayPointerTarget}" Cursor="Hand">
                                            <Border Width="64" Height="64" Background="Black" Opacity="0.5"/>
                                            <material:MaterialIcon Kind="{Binding PlayIconKind}" Width="32" Height="32"/>
                                        </Grid>
                                    </Border>
                                    
                                    <StackPanel Grid.Row="0" Grid.Column="2" Orientation="Horizontal">
                                        <TextBlock Classes="BodyStrongTextBlockStyle" VerticalAlignment="Bottom" HorizontalAlignment="Left" TextAlignment="Left"
                                                   TextTrimming="CharacterEllipsis"
                                                   Text="{Binding TrackName}"/>
                                        <Border PointerPressed="OnContextMenuPointerPressed" Cursor="Hand" Background="Transparent" VerticalAlignment="Bottom" Margin="{ext:Space 0, 0, 0, 0.125}">
                                            <FlyoutBase.AttachedFlyout>
                                                <MenuFlyout>
                                                    <MenuItem Header="Save Audio" Icon="{material:MaterialIconExt Music}" Command="{Binding SaveAudioCommand}"/>
                                                    <MenuItem Header="Save Cover Art" Icon="{material:MaterialIconExt Image}" Command="{Binding SaveCoverArtCommand}"/>
                                                    <MenuItem Header="Add to Playlist" Icon="{material:MaterialIconExt PlaylistAdd}" ItemsSource="{Binding $parent[views:RadioView].((viewModels:RadioViewModel)DataContext).CustomPlaylists}" Classes="AddToPlaylistSubItems">
                                                        <MenuItem.Styles>
                                                            <Style Selector="MenuItem.AddToPlaylistSubItems MenuItem" x:DataType="radio:RadioPlaylist">
                                                                <Setter Property="Header" Value="{Binding PlaylistName}"/>
                                                                <Setter Property="Command" Value="{Binding AddToPlaylistCommand}"/>
                                                                <Setter Property="CommandParameter" Value="{Binding $parent[MenuItem].((radio:MusicPackItem)DataContext).Id}"/>
                                                            </Style>
                                                        </MenuItem.Styles>
                                                    </MenuItem>
                                                    <MenuItem Header="Remove From Playlist" Icon="{material:MaterialIconExt PlaylistRemove}" Command="{Binding RemoveFromPlaylistCommand}"/>
                                                    <MenuItem Header="Set as Playlist Cover" Icon="{material:MaterialIconExt Image}" Command="{Binding SetCoverForPlaylistCommand}"/>
                                                    <MenuItem Header="Copy Path" Icon="{material:MaterialIconExt Clipboard}" Command="{Binding CopyPathCommand}"/>
                                                </MenuFlyout>
                                            </FlyoutBase.AttachedFlyout>
                                            
                                            <material:MaterialIcon Kind="DotsVertical" Opacity="0.75"/>
                                        </Border>
                                    </StackPanel>
                                    
                                    <TextBlock Grid.Row="1" Grid.Column="2" Classes="BodyTextBlockStyle TextFillColorSecondaryBrush" HorizontalAlignment="Left" VerticalAlignment="Top"
                                               Text="{Binding TrackDescription}"
                                               TextAlignment="Left" TextWrapping="Wrap" Opacity="0.75"/>
                                </Grid>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                    </ItemsControl>
                </ScrollViewer>
            </ui:FABorder>
        </Grid>
        
        <ui:FABorder Grid.Row="3" Margin="{ext:Space 0, 1, 0, 0}" IsVisible="{Binding ActiveItem, Converter={x:Static ObjectConverters.IsNotNull}}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="{ext:Space 1}"/>
                    <ColumnDefinition Width="2*"/>
                    <ColumnDefinition Width="{ext:Space 1}"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                
                <Grid Grid.Row="0" Grid.RowSpan="2" Grid.Column="0" Margin="{ext:Space 1}" HorizontalAlignment="Left">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="{ext:Space 1}"/>
                        <ColumnDefinition Width="2*"/>
                    </Grid.ColumnDefinitions>
                    
                    <ui:FABorder Grid.Column="0" Width="72" Height="72"/>
                    <Border Grid.Column="0" ClipToBounds="True" Width="72" Height="72">
                        <Border.Background>
                            <ImageBrush Source="{Binding ActiveItem.CoverArtBitmap}"/>
                        </Border.Background>
                    </Border>
                    
                    <StackPanel Grid.Column="2" VerticalAlignment="Center">
                        <TextBlock Classes="BodyStrongTextBlockStyle" VerticalAlignment="Bottom" HorizontalAlignment="Left" TextAlignment="Left"
                                   TextTrimming="CharacterEllipsis"
                                   Text="{Binding ActiveItem.TrackName, FallbackValue='No Song Playing'}"/>
                                    
                        <TextBlock Classes="BodyTextBlockStyle TextFillColorSecondaryBrush" HorizontalAlignment="Left" VerticalAlignment="Top"
                                   Text="{Binding ActiveItem.TrackDescription, FallbackValue='Play a music pack to begin listening!'}"
                                   TextAlignment="Left" TextWrapping="Wrap" Opacity="0.75"/>
                    </StackPanel>
                    
                </Grid>
                
                <Grid Grid.Row="0" Grid.Column="2" ColumnDefinitions="* * * * *" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="{ext:Space 0, 1, 0, 0}">
                    <ToggleButton Grid.Column="0" Classes="RadioButton" ToolTip.Tip="Loop" IsChecked="{Binding IsLooping}">
                        <material:MaterialIcon Kind="Refresh" Width="28" Height="28" />
                    </ToggleButton>
                    <Button Grid.Column="1" Classes="RadioButton" ToolTip.Tip="Previous" Command="{Binding Previous}">
                        <material:MaterialIcon Kind="SkipPrevious" Width="32" Height="32" />
                    </Button>
                    <Button Grid.Column="2" Classes="RadioButton" ToolTip.Tip="Play / Pause" Command="{Binding TogglePlayPause}">
                        <material:MaterialIcon Kind="{Binding PlayIconKind}" Width="32" Height="32"/>
                    </Button>
                    <Button Grid.Column="3" Classes="RadioButton" ToolTip.Tip="Next" Command="{Binding Next}">
                        <material:MaterialIcon Kind="SkipNext" Width="32" Height="32" />
                    </Button>
                    <ToggleButton Grid.Column="4" Classes="RadioButton" ToolTip.Tip="Shuffle" IsChecked="{Binding IsShuffling}">
                        <material:MaterialIcon Kind="Shuffle" Width="28" Height="28" />
                    </ToggleButton>
                </Grid>
                
                <Grid Grid.Row="1" Grid.Column="2" VerticalAlignment="Bottom">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="{ext:Space 1}" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="{ext:Space 1}" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                
                    <TextBlock Grid.Column="0" Margin="{ext:Space 0, 0, 0, 1}"
                               Text="{Binding CurrentTime, StringFormat=mm\\:ss, FallbackValue=0:00}"
                               VerticalAlignment="Center" />
                    <Slider Grid.Column="2" Value="{Binding CurrentTime.TotalSeconds}" 
                            Minimum="0" Maximum="{Binding TotalTime.TotalSeconds}"
                            ValueChanged="OnPlaybackSliderChanged"/>
                    <TextBlock Grid.Column="4" Margin="{ext:Space 0, 0, 0, 1}"
                               Text="{Binding TotalTime, StringFormat=mm\\:ss, FallbackValue=0:00}"
                               VerticalAlignment="Center" />
                </Grid>
                
                <Grid Grid.Row="0" Grid.RowSpan="2" Grid.Column="4" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="{ext:Space 1}" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    
                    <material:MaterialIcon Grid.Column="0" Kind="{Binding VolumeIconKind}"
                                           VerticalAlignment="Center" Width="24" Height="24" />
                    
                    <Slider Grid.Column="2" ValueChanged="OnVolumeSliderChanged"
                            Value="{Binding Volume, Mode=TwoWay}" Minimum="0.0" Maximum="1.0" TickFrequency="0.1"
                            VerticalAlignment="Center" MinWidth="200" />
                </Grid>
                
            </Grid>
        </ui:FABorder>
    </Grid>
</UserControl>