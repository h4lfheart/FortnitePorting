<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:viewModels="clr-namespace:FortnitePorting.ViewModels"
        xmlns:ui="using:FluentAvalonia.UI.Controls"
        xmlns:ext="clr-namespace:FortnitePorting.Extensions;assembly=FortnitePorting"
        xmlns:windowModels="clr-namespace:FortnitePorting.WindowModels"
        xmlns:avalonia="clr-namespace:Material.Icons.Avalonia;assembly=Material.Icons.Avalonia"
        xmlns:viewers="clr-namespace:FortnitePorting.Models.Viewers"
        x:Class="FortnitePorting.Windows.TexturePreviewWindow"
        x:DataType="windowModels:TexturePreviewWindowModel"
        Width="1280" Height="720" RequestedThemeVariant="Dark" FontFamily="Segoe UI" 
        TransparencyLevelHint="{Binding Settings.Theme.TransparencyHints}" Background="#DB1C1C26"
        ExtendClientAreaToDecorationsHint="True" ExtendClientAreaChromeHints="NoChrome"
        WindowStartupLocation="CenterScreen" ClosingBehavior="OwnerAndChildWindows" ExtendClientAreaTitleBarHeightHint="35"
        Icon="/Assets/LogoRebrand.ico"
        Title="Texture Viewer">
    <Grid Margin="{Binding $parent[Window].OffScreenMargin}">
        <Grid.RowDefinitions>
            <RowDefinition Height="35"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        
        <Grid Grid.Row="0" Background="#2F000000" HorizontalAlignment="Stretch" PointerPressed="OnPointerPressedUpperBar">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="{ext:Space 0.75}" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="{ext:Space 0.5}" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
            
                <ui:ImageIcon Grid.Column="0" Source="/Assets/LogoRebrand.png" 
                              HorizontalAlignment="Right"
                              Width="20" Height="20" 
                              RenderOptions.BitmapInterpolationMode="HighQuality" RenderOptions.EdgeMode="Antialias"/>

                <TextBlock Grid.Column="2" Text="Texture Viewer" FontWeight="SemiBold" FontSize="16"
                           HorizontalAlignment="Center" VerticalAlignment="Center" />
            </Grid>
            
            <Grid HorizontalAlignment="Right">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="{ext:Space 0.5}" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="{ext:Space 0.5}" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="1" />
                </Grid.ColumnDefinitions>
            
                <Border Grid.Column="0" PointerPressed="OnMinimizePressed" Cursor="Hand" CornerRadius="0" Classes="MinimizeMaximize" Child="{avalonia:MaterialIconExt Minus}" Width="35" Height="35"/>
                <Border Grid.Column="2" PointerPressed="OnMaximizePressed" Cursor="Hand" CornerRadius="0" Classes="MinimizeMaximize" Child="{avalonia:MaterialIconExt Maximize}" Width="35" Height="35"/>
                <Border Grid.Column="4" PointerPressed="OnClosePressed" Cursor="Hand" CornerRadius="0" Classes="Close" Child="{avalonia:MaterialIconExt Close}" Width="35" Height="35"/>
            </Grid>
        </Grid>
        
        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            
            <ui:TabView Grid.Row="0" IsAddTabButtonVisible="False" TabCloseRequested="OnTabClosed" TabWidthMode="Compact"
                        TabItems="{Binding Textures}" 
                        SelectedItem="{Binding SelectedTexture, Mode=TwoWay}">
                <ui:TabView.TabItemTemplate>
                    <DataTemplate x:DataType="viewers:TextureContainer">
                        <TextBlock Text="{Binding TextureName}"/>
                    </DataTemplate>
                </ui:TabView.TabItemTemplate>
                <ui:TabView.Styles>
                    <Style Selector="Border#RightBottomBorderLine">
                        <Setter Property="IsVisible" Value="False"/>
                    </Style>
                    <Style Selector="Border#LeftRightBottomBorderLine">
                        <Setter Property="IsVisible" Value="False"/>
                    </Style>
                </ui:TabView.Styles>
            </ui:TabView>
            
            <Grid Grid.Row="1" Background="#1C000000" DataContext="{Binding SelectedTexture}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="{ext:Space 1}"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                
                <Grid Grid.Row="0" HorizontalAlignment="Center" Margin="{ext:Space 0, 1, 0, 0}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="{ext:Space 1}"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="{ext:Space 1}"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    
                    <StackPanel Grid.Column="0" Orientation="Horizontal">
                        <TextBlock Text="Mipmap" Classes="BodyStrongTextBlockStyle" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="{ext:Space 0, 0, 1, 0}"/>
                        <ui:NumberBox Value="{Binding TargetMipIndex}" 
                                      Minimum="{Binding MinimumMip}" Maximum="{Binding MaximumMip}"
                                      SpinButtonPlacementMode="Inline"/>
                    </StackPanel>
                    
                    <StackPanel Grid.Column="2" Orientation="Horizontal">
                        <TextBlock Text="Layer" Classes="BodyStrongTextBlockStyle" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="{ext:Space 0, 0, 1, 0}"/>
                        <ui:NumberBox Value="{Binding TargetLayerIndex}" 
                                      Minimum="0" Maximum="{Binding MaximumLayer}"
                                      SpinButtonPlacementMode="Inline"/>
                    </StackPanel>
                    
                    <StackPanel Grid.Column="4" Orientation="Horizontal" HorizontalAlignment="Center">
                        <TextBlock Text="Channels" Classes="BodyStrongTextBlockStyle" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="{ext:Space 0, 0, 1, 0}"/>
                        <CheckBox Classes="Red" IsChecked="{Binding ShowRedChannel}"/>
                        <CheckBox Classes="Green" IsChecked="{Binding ShowGreenChannel}"/>
                        <CheckBox Classes="Blue" IsChecked="{Binding ShowBlueChannel}"/>
                        <CheckBox Classes="Alpha" IsChecked="{Binding ShowAlphaChannel}"/>
                    </StackPanel>
                </Grid>
                
                <Separator Grid.Row="1" Margin="{ext:Space 0, 1, 0, 0}"/>
                
                <Grid Grid.Row="2" Margin="{ext:Space 1}">
                    <Border CornerRadius="8"
                            Width="{Binding Bounds.Width, ElementName=TemplateImage}"
                            Height="{Binding Bounds.Height, ElementName=TemplateImage}">
                        <Border.Background>
                            <ImageBrush Source="{Binding DisplayBitmap}"/>
                        </Border.Background>
                    </Border>
                    
                    <Image x:Name="TemplateImage" Opacity="0" Source="{Binding DisplayBitmap}"/>
                </Grid>
            </Grid>
        </Grid>
    </Grid>
</Window>
